ToDo - General1. Run all tests from a single call - e.g. see nose, unittest TestLoader discover, or write a simple suite+runner.  2. Fix a data format for everything to use. For now this means making the bias gradients return in the same shape as the weights gradients.3. Input validation - in particular if a layer has weights of shape S1 and these are set to a tensor of shape S2, should there be a warning at least?4. Forward the sizes - have a method for this, useful for weight initialization.5. The ann_by_layers backward should cache or otherwise handle forwarding data for backward computations in an efficient way, preferably time efficient over memory efficient.6. Maybe consider making training parameters an object to pin down some api for both the parameter and the update procedure.7. How to handle multi-input/multi-output layers?8. How to handle the loss layer - it has a slightly different api since it needs the ground truth as an input.9. Minibatches10. Training example on more data.